html


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.min.css" />
    <link rel="stylesheet" href="musicplayer.css">
    <title>music player</title>
</head>

<body>
    <h1> music player </h1>
    <div class="music-container play ">
        <div class="music-info">
            <h4 id="title">
                ukulele
            </h4>
            <div class="progress-container">
                <div class="progress"></div>

            </div>
        </div>
        <audio src="music/ukulele.mp3" id="audio"></audio>
        <div class="img-container">
            <img src="images/ukulele.jpg" alt="music-cover" id="cover" />

        </div>
        <div class="navigation">
            <button id="prev" class="action-btn">
                <i class="fas fa-backward"></i>
            </button>
            <button id="play" class="action-btn action-btn-big">
                <i class="fas fa-play"></i>
            </button>
            <button id="next" class="action-btn">
                <i class="fas fa-forward"></i>
            </button>
        </div>
    </div>
    <script src="musicplayer.js"></script>

</body>

</html>



css


@import url('https://fonts.googleapis.com/css?family=Lato&display=swap');

*{
    box-sizing: border-box;
}
body{
    height: 100vh;
    margin: 0;
    font-family: "Lato",sans-serif;
    background-image: linear-gradient(
        0deg,
    rgb(247,247,247) 23.8%,
    rgb(252,221,221) 92%
    );
display :flex ;
flex-direction:column;
align-items:center;
justify-content: center;
}

.music-container{
    background-color: #fff;
    border-radius: 15px;
    box-shadow: 0 20px 20px 0 rgba(252,169,169,0.6);
    display:flex;
padding: 20px 30px;
position: relative;
margin: 100px 0;
z-index: 10;
}

.img-container{
    position: relative;
    width: 110px;
}





.img-container::after{
    content: '';
    background-color:#fff;
    height: 20px;
    width: 20px;
    position: absolute;
    left: 50%;
    bottom: 100%;
    border-radius: 50%;
    transform: translate(-50%,50%);
}

.img-container img{
    width: inherit;
    height: 110px;
    border-radius: 50%;
    object-fit: cover;
    position: absolute;
    bottom: 0;
    left: 0;
animation: rotate 3s linear infinite;
animation-play-state: paused;

}

.music-container.play .img-container img{
    animation-play-state: running;

}




@keyframes rotate{
    from {
        transform: rotate(0deg);
    }
    to{
        transform: rotate(360deg);
    }
}


.navigation{
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
}
.action-btn{
    background-color: #fff;
    border: 0;
    color: #dfdfdf;
    font-size: 20px;
    cursor: pointer;
    padding: 10px;
    margin: 0 20px;
}
.action-btn.action-btn-big{
    color: #cdc2d0;
    font-size: 30px;
}
.action-btn:focus{
    outline: 0;
}

.music-info{
    background-color: rgba(255,255,255,0.5);
    border-radius: 15px 15px 0 0;
    position: absolute;
    top:0;
    left: 20px;
    width: calc(100% - 40px);
opacity: 0;
    transform: translateY(0%);
    
    padding: 10px 10px 10px 150px;
    

  transition: transform 0.3s ease-in ,opacity 0.3s ease-in;
  
   
  z-index: 0;
}

.music-container.play .music-info{


    opacity: 1;
    transform: translateY(-100%);
}
.music-info h4 {
    margin: 0;
  }

.progress-container{
    background: #fff;
    border-radius: 5px;
    cursor: pointer;
    margin: 10px 0;
    height: 4px;
    width: 100%;
}
.progress{
    background-color: #fe8daa;
    border-radius: 5px;
    height: 100%;
    width: 50%;
    transition: width 0.1s linear;
}




js


const musicContainer = document.querySelector('.music-container')
const playBtn = document.querySelector('#play')
const prevBtn = document.querySelector("#prev")
const nextBtn = document.querySelector("#next")
const audio = document.querySelector("#audio")
const progress = document.querySelector(".progress")
const progressContainer = document.querySelector(".progress-container")
const title = document.querySelector("#title")
const cover = document.querySelector("#cover")


const songs = ['hey', 'summer', 'ukulele']

let songIndex = 2

loadSong(songs[songIndex])


function loadSong(song) {
    title.innerText = song
    audio.src = `music/${song}.mp3`
    cover.src = `images/${song}.jpg`
}



function playSong() {
    musicContainer.classList.add("play")
    playBtn.querySelector("i.fas").classList.remove("fa-play")
    playBtn.querySelector("i.fas").classList.add("fa-pause")

    audio.play()

}


function pauseSong() {
    musicContainer.classList.remove("play")
    playBtn.querySelector("i.fas").classList.add("fa-play")
    playBtn.querySelector("i.fas").classList.remove("fa-pause")

    audio.pause()
}

function prevSong() {
    songIndex--
    if (songIndex < 0) {
        songIndex = songs.length - 1
    }
    loadSong(songs[songIndex])
    playSong()

}


function nextSong() {
    songIndex++
    if (songIndex > songs.length - 1) {
        songIndex = 0
    }
    loadSong(songs[songIndex])
    playSong()
}
function updateProgress(e) {
    const { duration, currentTime } = e.srcElement
    const progressPercent = (currentTime / duration) * 100
    progress.style.width = `${progressPercent}%`
}


function setProgress(e) {
    const width = this.clientWidth
    const clickX = e.offsetX
    const duration = audio.duration

    audio.currentTime = (clickX / width) * duration
}


playBtn.addEventListener("click", () => {
    const isPlaying = musicContainer.classList.contains("play")

    if (isPlaying) {
        pauseSong()

    } else {
        playSong()

    }
})

prevBtn.addEventListener("click", prevSong)

nextBtn.addEventListener("click", nextSong)

audio.addEventListener("timeupdate", updateProgress)

progressContainer.addEventListener("click", setProgress)


audio.addEventListener("ended", nextSong)